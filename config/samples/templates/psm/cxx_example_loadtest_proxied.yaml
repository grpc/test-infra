# Load test configurations generated from a template by loadtest_config.py.
# See documentation below:
# https://github.com/grpc/grpc/blob/master/tools/run_tests/performance/README.md#grpc-oss-benchmarks
apiVersion: e2etest.grpc.io/v1
kind: LoadTest
metadata:
  annotations:
    enablePrometheus: 'true'
    scenario: cpp_protobuf_async_unary_5000rpcs_1KB_psm_8channels_16threads_5000load
    uniquifier: proxied
  labels:
    language: cxx
    prefix: psm-examples
  name: psm-examples-cpp-protobuf-async-unary-5000rpcs-1kb-psm-8channels-16threads-5000load-proxied
spec:
  clients:
  - build:
      args:
      - build
      - --config
      - opt
      - //test/cpp/qps:qps_worker
      command:
      - bazel
    clone:
      gitRef: master
      repo: https://github.com/grpc/grpc.git
    language: cxx
    name: '0'
    run:
    - args:
      - -c
      - |
        timeout --kill-after="${KILL_AFTER}" "${POD_TIMEOUT}" \
            bazel-bin/test/cpp/qps/qps_worker --driver_port="${DRIVER_PORT}"
      command:
      - bash
      name: main
    - args:
      - -default-config-path
      - containers/runtime/xds-server/config/default_config.json
      - -path-to-bootstrap
      - containers/runtime/xds-server/bootstrap.json
      command:
      - main
      image: ${psm_image_prefix}/xds-server:${psm_image_tag}
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 5
        tcpSocket:
          port: 10000
      name: xds-server
    - image: ${psm_image_prefix}/sidecar:${psm_image_tag}
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 5
        tcpSocket:
          port: 10000
      name: sidecar
  driver:
    language: cxx
    name: '0'
    run: []
  scenariosJSON: |
    {
      "scenarios": {
        "name": "cpp_protobuf_async_unary_5000rpcs_1KB_psm_8channels_16threads_5000load",
        "num_servers": 1,
        "num_clients": 1,
        "client_config": {
          "client_type": "ASYNC_CLIENT",
          "security_params": null,
          "outstanding_rpcs_per_channel": 1,
          "client_channels": 8,
          "async_client_threads": 1,
          "client_processes": 0,
          "threads_per_cq": 0,
          "rpc_type": "UNARY",
          "histogram_params": {
            "resolution": 0.01,
            "max_possible": 60000000000.0
          },
          "channel_args": [
            {
              "name": "grpc.optimization_target",
              "str_value": "latency"
            }
          ],
          "payload_config": {
            "simple_params": {
              "req_size": 1024,
              "resp_size": 1024
            }
          },
          "load_params": {
            "poisson": {
              "offered_load": 5000
            }
          }
        },
        "server_config": {
          "server_type": "ASYNC_SERVER",
          "security_params": null,
          "async_server_threads": 16,
          "server_processes": 0,
          "threads_per_cq": 0,
          "channel_args": [
            {
              "name": "grpc.optimization_target",
              "str_value": "latency"
            }
          ]
        },
        "warmup_seconds": 30,
        "benchmark_seconds": 30
      }
    }
  servers:
  - build:
      args:
      - build
      - --config
      - opt
      - //test/cpp/qps:qps_worker
      command:
      - bazel
    clone:
      gitRef: master
      repo: https://github.com/grpc/grpc.git
    language: cxx
    name: '0'
    run:
    - args:
      - -c
      - |
        timeout --kill-after="${KILL_AFTER}" "${POD_TIMEOUT}" \
            bazel-bin/test/cpp/qps/qps_worker --driver_port="${DRIVER_PORT}" \
            --server_port=10010
      command:
      - bash
      name: main
  timeoutSeconds: 900
  ttlSeconds: 86400
